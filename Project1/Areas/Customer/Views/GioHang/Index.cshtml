@model GioHangViewModel
<style>
    input[type="text"] {
        width: 80px;
    }
</style>
<div class="container my-8">
    <div class="row">
        <!-- Giỏ hàng -->
        <div class="col-md-8">
            <h2 class="mb-3 text-center text-white">Giỏ hàng của bạn</h2>
            <div class="table">
                <table class="table table-bordered text-center text-white">
                    <thead class="table-light">
                        <tr>
                            <th>STT</th>
                            <th width="100">Tên sản phẩm</th>
                            <th>Hình ảnh</th>
                            <th >Giá tiền</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.DsGioHang)
                        {
                            <tr data-price=@item.SanPham.Price>
                                <td>1</td>
                                <td>@item.SanPham.Name</td>
                                <td><img src="@item.SanPham.ImageUrl" alt="Sản phẩm A" class="img-fluid" width="500"></td>
                                <td>@item.SanPham.Price.ToString("N0") VND</td>
                                <td>
                                    <div class="d-flex justify-content-center align-items-center">
                                        <a asp-action="Giam" asp-route-giohangId="@item.Id" class="btn btn-sm btn-outline-secondary minus">-</a>
                                        <input asp-for="@item.Quantity" type="text" class="form-control text-center quantity mx-2" readonly>
                                        <a asp-action="Tang" asp-route-giohangId="@item.Id" class="btn btn-sm btn-outline-secondary plus">+</a>
                                    </div>
                                </td>
                                <td class="item-total text-danger">@((item.Quantity * item.SanPham.Price).ToString("N0")) VND</td>
                                <td>
                                    <a asp-action="Xoa" asp-route-giohangId="@item.Id" class="btn btn-sm btn-danger remove">Xóa</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Panel Thanh toán -->
        <div class="col-md-4">
            <div class="card-dark text-white">
                <div class="card-body">
                    <h5 class="card-title">Thông tin thanh toán</h5>

                    <!-- Tổng cộng -->
                    <p><strong class="text-white">Tổng cộng:</strong> <span id="cart-total" class="text-danger"><b>@(String.Format("{0:N0}", Model.HoaDon.Total)) VND</b></span></p>

                    <!-- Phương thức thanh toán -->
                    <h6>Phương thức thanh toán</h6>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="paymentCOD" checked>
                        <label class="form-check-label" for="paymentCOD">
                            Thanh toán khi nhận hàng (COD)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="paymentCard">
                        <label class="form-check-label" for="paymentCard">
                            Thanh toán qua thẻ ngân hàng
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="paymentMethod" id="paymentEwallet">
                        <label class="form-check-label" for="paymentEwallet">
                            Thanh toán qua ví điện tử
                        </label>
                    </div>

                    <!-- Mã giảm giá -->
                    <div class="input-group mt-3">
                        <input type="text" class="form-control" placeholder="Nhập mã giảm giá">
                        <button class="btn btn-outline-secondary" type="button">Áp dụng</button>
                    </div>

                    <!-- Nút đặt hàng -->
                    <a class="btn btn-success mt-3 w-100" asp-action="ThanhToan">Thanh toán</a>
                    @* <button class="btn btn-success mt-3 w-100">Đặt hàng</button> *@
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Tăng số lượng
    document.querySelectorAll('.plus').forEach(button => {
        button.addEventListener('click', function () {
            let quantityInput = this.closest('td').querySelector('.quantity');
            let currentQuantity = parseInt(quantityInput.value);
            quantityInput.value = currentQuantity + 1;
            updateRow(this);
        });
    });

    // Giảm số lượng
    document.querySelectorAll('.minus').forEach(button => {
        button.addEventListener('click', function () {
            let quantityInput = this.closest('td').querySelector('.quantity');
            let currentQuantity = parseInt(quantityInput.value);
            if (currentQuantity > 1) {
                quantityInput.value = currentQuantity - 1;
                updateRow(this);
            }
        });
    });

    // Xóa sản phẩm
    document.querySelectorAll('.remove').forEach(button => {
        button.addEventListener('click', function () {
            this.closest('tr').remove();
            updateTotal();
        });
    });

    // Cập nhật thành tiền của từng hàng và tổng cộng
    function updateRow(button) {
        let row = button.closest('tr');
        let price = parseInt(row.getAttribute('data-price'));
        let quantity = parseInt(row.querySelector('.quantity').value);
        let itemTotal = price * quantity;
        row.querySelector('.item-total').textContent = new Intl.NumberFormat('vi-VN').format(itemTotal) + 'đ';
        updateTotal();
    }

    // Cập nhật tổng cộng
    function updateTotal() {
        let total = 0;
        document.querySelectorAll('tbody tr').forEach(row => {
            let itemTotal = parseInt(row.querySelector('.item-total').textContent.replace(/[^0-9]/g, ''));
            total += itemTotal;
        });
        document.getElementById('cart-total').textContent = new Intl.NumberFormat('vi-VN').format(total) + 'đ';
    }

    // Cập nhật Size
    function updateSize(giohangId, newSize) {
        fetch('/GioHang/UpdateSize', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            },
            body: JSON.stringify({ giohangId: giohangId, newSize: newSize })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log("Kích cỡ đã được cập nhật");
                    // Cập nhật giao diện để hiển thị kích cỡ mới
                    // Ví dụ:
                    $('#size_' + giohangId).text(newSize);
                    // Hoặc load lại trang để cập nhật toàn bộ giao diện
                    location.reload();
                } else {
                    console.error("Lỗi khi cập nhật kích cỡ");
                }
            });
    }
</script>

